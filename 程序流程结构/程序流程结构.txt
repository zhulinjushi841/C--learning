4 程序流程结构
C/C++支持最基本的三种程序运行结构：顺序结构、选择结构、循环结构
顺序结构：程序按照顺序执行，不发生跳转
选择结构：依据条件是否满足，有选择地执行相应功能
循环结构：依据条件是否满足，循环多次执行某段代码

4.1选择结构
4.1.1if语句
作用：执行满足条件的语句
if语句的三种形式
单行格式if语句
多行格式if语句
多条件的if语句
1.单行格式if语句：  if(条件) {条件满足执行的语句}
注意：if条件语句后不要加；

2.多行格式if语句：if(条件){条件满足执行的语句} else{条件不满足执行的语句}；

3.多条件的if语句：if(条件1){条件1满足执行的语句} else if(条件2){条件2满足执行的语句}...else{都不满足执行的语句}

4.1.2三目运算符
作用：通过三目运算符实现简单的判断
语法：表达式1 ? 表达式2 : 表达式3
解释：
如果表达式1的值为真，执行表达式2，并返回表达式2的结果；
如果表达式2的值为假，执行表达式3，并返回表达式3的结果。

4.1.3switch语句
作用：执行多条件分支语句
语法：
switch(表达式)：
{
	case 结果1： 执行语句；break;
	case 结果2： 执行语句；break;
	......
	default： 执行语句；break;
}

4.2循环结构
4.2.1while循环语句
作用：满足循环条件，执行循环语句
语法：while(循环条件){循环语句}
解释：只要循环条件的结果为真，就执行循环语句

4.2.2do...while循环语句
作用：满足循环条件，执行循环语句
语法：do{ 循环语句 } while(循环条件);
注意：与while的区别在于do...while会先执行一次循环语句，再判断循环条件

4.2.3for循环语句
作用：满足循环条件，执行循环语句
语法：for(起始表达式;条件表达式;末尾循环体) {循环语句；}

4.2.4嵌套循环
作用：在循环体中再嵌套一层循环，解决一些实际问题

4.3跳转语句
4.3.1break语句
作用：用于跳出选择结构或者循环结构
break使用的时机：
出现在switch条件语句中，作用是终止case并跳出switch
出现在循环语句中，作用是跳出当前的循环语句
出现在嵌套循环中，跳出最近的内层循环语句

4.3.2continue语句
作用：在循环语句中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环
continue语句执行到continue行之后的代码就不再执行了，而执行下一次循环

4.3.3goto语句
作用：可以无条件跳转语句
语法： goto 标记
解释：如果标记的名称存在，执行到goto语句时，就会跳转到标记的位置
不推荐使用goto语句，因为会破坏程序的代码运行结构
例如： 
goto FLAG;
FLAG：
	xxxxxxxx；
	xxxxxxxx;
