语法：数据类型 变量名 = 变量初始值
int a = 10;
数据类型存在的意义：给变量分配一个合适的内存空间

2.数据类型 
C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存
2.1 整型
作用：整型变量表示的是 整数类型 的数据
C++中能够表示整型的类型有以下几种方式，区别在于所占内存空间不同
数据类型		占用空间									取值范围
short(短整型)	2字节										(-2^15 ~ 2^15-1) (-32768 ~ 32767)
int(整型)		4字节										(-2^31 ~ 2^31-1)
long(长整型)		Windows为4字节，Linux为4字节(32位），8字节(64位）		(-2^31 ~ 2^31-1)
long long(长长整型) 8字节									(-2^63 ~ 2^63-1)


2.2 sizeof关键字
作用：利用sizeof关键字可以统计数据类型所占内存大小
语法：sizeof(数据类型  or 变量)

2.3 实型（浮点型）
作用：用于表示小数
浮点型变量分为两种：
1.单精度float
2.双精度double

默认情况下 输出一个小数，会显示6位有效数字

两者的区别在于表示的有效数字范围不同。
数据类型	占用空间	有效数字范围
float		4字节		7位有效数字
double	8字节		15 ~ 16位有效数字

2.4字符型
作用：字符型变量用于显示单个字符
语法： char ch = 'a'

注意1：在显示字符型变量时，用单引号将字符括起来，不要使用双引号
注意2：单引号内只能有一个字符，不可以是字符串

C和C++中字符型变量只占用1个字节。
字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCII编码放入到存储单元

字符型变量对应的ASCII编码
a - 97
A - 65

ASCII码大致由以下两部分组成：
ASCII非打印控制字符：ASCII表上的数字0 ~ 31分配给了 控制字符，用于控制像打印机等一些外围设备。
ASCII打印字符：数字32 ~ 126 分配给了能在键盘上找到的字符，当查看或者打印文档时就会出现。


2.5转义字符
作用：用于表示一些不能显示出来的ASCII字符
现阶段常用的常用转义字符有：   \n	\\	\t
\n:换行(LF)，将当前位置移到下一行开头
\t:水平制表(HT)（跳到下一个TAB位置）
\\:代表一个反斜线字符“\”


2.6 字符串型
作用：用于表示一串字符
两种风格
1.C风格字符串：char 变量名[] = '字符串值'
注意：C风格的字符串需要用双引号括起来
2.C++风格字符串：string 变量名 = “字符串值”
注意：需要包含一个头文件 #include<string>

2.7 布尔类型
作用：布尔数据类型代表真或假的值
bool类型只有两个值：
true --- 真(本质是1)
false--- 假(本质是0)
bool类型占1个字节大小

2.8 数据的输入
作用：用于从键盘获取数据
关键字：cin
语法：cin>>变量


扩展：
C语言中的int32_t uint32_t 以及 size_t
1.int32_t 和 int的区别
我们都知道，C语言的基本类型就是short，int，char等，但是在许多源代码中却经常碰到int32_t,int8_t之类
形式的定义，其实这些基本都是基本类型的typedef重定义。
也就是说，在不同平台下使用这些名称可以保证固定长度。
1字节 int8_t——char
2字节 int16_t——short
4字节 int32_t——int
8字节 int64_t——long long
使用原因
有些数据类型的确切字节数依赖于程序是如何被编译的
比如数据类型long一般在32位程序中为 4字节 在64位程序中则为 8 字节 也就是说不同编译器下long的大小可能不同
为了避免以来“典型”大小和不同编译器设置带来的歧义，IOS C99引入了一类数据类型，其数据大小是固定的，不随编译器
或机器设置而变化。比如int32_t和int64_t分别就是4字节和8字节。使用确定大小的整数类型就是我们准确控制数据表示的
最佳途径。

2.int32_t和uint32_t的区别
一个是有符号数，一个是无符号数，也就是一个可以有负数，而一个没负数，可以取的整数范围更大

3.size_t
size_t主要用于计数，与他就是一个unsigned int的重定义，如sizeof函数返回值类型即为size_t。在不同位的机器中
所占的位数也不同，size_t是无符号数。
在不同机器中的定义不同：
在32位机器中定义为： typedef unsigned int size_t;	(4个字节）
在64位机器中定义为：typedef unsigned long size_t;(8个字节）
使用size_t来代替int或者unsigned可以保证在同一个平台中，始终得到一个数据类型或变量的字节大小，
保证了程序对该数据类型或变量的统计方式始终一致，不会因为平台的改变而出现错误。


