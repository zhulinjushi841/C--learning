#include<string>
#include<iostream>
using namespace std;
//
// 1.3.6 类模板成员函数的类外实现
// 学习目标：
// 能够掌握类模板中的成员函数类外实现
//

template<class T1,class T2>
class Person
{
public:
	Person(T1 name, T2 age);
	//{
	//	this->m_Age = age;
	//	this->m_Name = name;
	//}


	void ShowPerson();
	//{
	//	cout << "姓名：" << this->m_Name << "年龄：" << this->m_Age << endl;
	//}

	T1 m_Name;
	T2 m_Age;
};

//构造函数的类外实现
template<class T1, class T2>
Person<T1, T2>::Person(T1 name, T2 age)
{
	
		this->m_Age = age;
		this->m_Name = name;
}

//成员函数的类外实现
template<class T1, class T2>
void Person<T1, T2>::ShowPerson()
{
	cout << "姓名：" << this->m_Name << " 年龄：" << this->m_Age << endl;
}


void test01()
{
	Person<string, int> P("Tom", 20);
	P.ShowPerson();
}

int main()
{
	test01();
	system("pause");
	return 0;
}